openapi: 3.1.0
info:
  title: SlimBuddy Backend API
  description: API for logging meals, weight, exercise, measurements, updating settings, food values, and retrieving progress graphs for SlimBuddy users.
  version: 1.0.2
servers:
  - url: https://slimbuddy-backend-production.up.railway.app

paths:
  /api/ping:
    get:
      summary: Ping the API
      description: Verifies that the backend API is running.
      operationId: ping
      responses:
        "200":
          description: API is alive

  /api/log_meal:
    post:
      summary: Log a meal
      operationId: logMeal
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - user_id
                - meal_description
                - syns
              properties:
                user_id:
                  type: string
                meal_description:
                  type: string
                syns:
                  type: number
                meal_type:
                  type: string
                healthy_extra_a_used:
                  type: boolean
                healthy_extra_b_used:
                  type: boolean
                notes:
                  type: string
                date:
                  type: string
      responses:
        "200":
          description: Meal logged

  /api/log_weight:
    post:
      summary: Log a user's weight
      operationId: logWeight
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - user_id
                - weight
                - date
                - unit
              properties:
                user_id:
                  type: string
                  description: The unique ID of the user
                weight:
                  type: number
                  description: The user's weight in the specified unit
                date:
                  type: string
                  description: The date of the log in YYYY-MM-DD format
                unit:
                  type: string
                  enum: [kg, lbs, st_lbs]
                  description: Unit of the weight value
                notes:
                  type: string
                  description: Optional notes
      responses:
        "200":
          description: Weight logged successfully

  /api/log_exercise:
    post:
      summary: Log exercise activity
      operationId: logExercise
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - user_id
                - exercise_type
                - duration_minutes
              properties:
                user_id:
                  type: string
                exercise_type:
                  type: string
                duration_minutes:
                  type: number
                notes:
                  type: string
                date:
                  type: string
      responses:
        "200":
          description: Exercise logged

 /api/log_measurements:
  post:
    summary: Log body measurements
    operationId: logMeasurements
    security:
      - BearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - user_id
              - date
            properties:
              user_id:
                type: string
                description: The unique ID of the user
              date:
                type: string
                description: Date of measurement (DD/MM/YYYY or YYYY-MM-DD)
              bust:
                type: number
              waist:
                type: number
              hips:
                type: number
              thighs:
                type: number
              neck:
                type: number
              arm:
                type: number
              under_bust:
                type: number
              knees:
                type: number
              ankles:
                type: number
              notes:
                type: string
                description: Optional notes about the measurement session
    responses:
      "200":
        description: Measurements logged successfully

  /api/user_goals:
    post:
      summary: Log a user's goal
      operationId: logUserGoal
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - user_id
                - goal_type
                - target_value
                - unit
              properties:
                user_id:
                  type: string
                goal_type:
                  type: string
                  enum: [lose, maintain]
                target_value:
                  type: number
                unit:
                  type: string
                  enum: [kg, lbs, st_lbs]
                target_date:
                  type: string
      responses:
        "200":
          description: User goal logged successfully

  /api/update_user_settings:
    patch:
      summary: Update user settings
      operationId: updateUserSettings
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                preferred_name:
                  type: string
                tone:
                  type: string
                preferred_weight_unit:
                  type: string
                diet_preference:
                  type: string
                food_allergies:
                  type: string
                food_dislikes:
                  type: string
                typical_day:
                  type: string
                healthy_extra_a:
                  type: string
                healthy_extra_b:
                  type: string
                syn_limit:
                  type: number
                target_weight:
                  type: number
                maintenance_mode_enabled:
                  type: boolean
      responses:
        "200":
          description: User settings updated

  /api/update_food_value:
    post:
      summary: Update or override a food's Syn value
      operationId: updateFoodValue
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - user_id
                - food_name
                - syn_value
              properties:
                user_id:
                  type: string
                food_name:
                  type: string
                syn_value:
                  type: number
                is_healthy_extra_b:
                  type: boolean
                notes:
                  type: string
      responses:
        "200":
          description: Food value updated

  /api/weight_graph:
    get:
      summary: Get weight progress chart URL
      operationId: getWeightGraph
      security:
        - BearerAuth: []
      parameters:
        - name: user_id
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returns a URL to the weight chart image

/api/user_profile:
  get:
    summary: Get user profile using JWT
    description: Returns the authenticated user's ID based on the JWT token provided in the Authorization header.
    operationId: getUserProfile
    security:
      - BearerAuth: []
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  example: "45089e78-5652-4f62-8d8f-dfd8e2d31330"

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Dummy:
      type: object
      description: Placeholder schema for OpenAI importer
      properties: {}
