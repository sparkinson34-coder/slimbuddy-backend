openapi: 3.1.0
info:
  title: SlimBuddy Backend API
  description: API for logging meals, weight, exercise, measurements, updating settings, food values, and retrieving progress graphs for SlimBuddy users.
  version: 1.0.2

servers:
  - url: https://slimbuddy-backend-production.up.railway.app

paths:
  /api/ping:
    get:
      summary: Check if API is alive
      responses:
        '200':
          description: API is running

  /api/log_weight:
    post:
      summary: Log user weight
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                weight:
                  type: number
                unit:
                  type: string
                  example: kg
                date:
                  type: string
                  format: date
                notes:
                  type: string
      responses:
        '200':
          description: Weight logged successfully

  /api/log_measurements:
    post:
      summary: Log user body measurements
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                bust: { type: number }
                waist: { type: number }
                hips: { type: number }
                neck: { type: number }
                arm: { type: number }
                under_bust: { type: number }
                thighs: { type: number }
                knees: { type: number }
                ankles: { type: number }
                notes: { type: string }
                date: { type: string, format: date }
      responses:
        '200':
          description: Measurements logged successfully

  /api/log_meal:
    post:
      summary: Log meal for the user
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                meal_name: { type: string }
                calories: { type: number }
                syns: { type: number }
                date: { type: string, format: date }
      responses:
        '200':
          description: Meal logged successfully

  /api/log_exercise:
    post:
      summary: Log exercise activity
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                exercise_type: { type: string }
                duration_minutes: { type: number }
                calories_burned: { type: number }
                date: { type: string, format: date }
      responses:
        '200':
          description: Exercise logged successfully

  /api/weight_graph:
    get:
      summary: Get weight graph data for user
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Weight graph data returned successfully

  /api/user_profile:
    get:
      summary: Get user profile using JWT
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Returns authenticated user profile

  /api/user_goals:
    get:
      summary: Fetch user goals
      security:
        - BearerAuth: []
      responses:
        '200':
          description: User goals retrieved successfully

  /api/update_user_settings:
    put:
      summary: Update user settings
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                target_weight: { type: number }
                daily_syn_limit: { type: number }
      responses:
        '200':
          description: Settings updated successfully

  /api/update_food_value:
    put:
      summary: Update food value (e.g., Syns)
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                food_name: { type: string }
                syn_value: { type: number }
      responses:
        '200':
          description: Food value updated successfully

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
