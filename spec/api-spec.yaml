openapi: 3.0.3
info:
  title: SlimBuddy API
  version: 1.0.0
  description: API documentation for SlimBuddy backend

servers:
  - url: https://slimbuddy-backend-production.up.railway.app

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    basicAuth:
      type: http
      scheme: basic

security:
  - bearerAuth: []

paths:
  /api/log_meal:
    post:
      summary: Log a meal
      description: Log a new meal for the authenticated user.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - date
                - meal_type
                - description
                - calories
              properties:
                date:
                  type: string
                  format: date
                  example: "2025-08-12"
                meal_type:
                  type: string
                  example: "Lunch"
                description:
                  type: string
                  example: "Chicken salad with olive oil"
                calories:
                  type: integer
                  example: 350
      responses:
        '200':
          description: Meal logged successfully
        '401':
          description: Unauthorized

  /api/log_weight:
    post:
      summary: Log weight
      description: Log a weight entry for the authenticated user.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - date
                - weight
                - unit
              properties:
                date:
                  type: string
                  format: date
                  example: "2025-08-12"
                weight:
                  type: number
                  example: 82.5
                unit:
                  type: string
                  enum: [kg, lb, st]
                  example: "kg"
                notes:
                  type: string
                  example: "Morning measurement after breakfast"
      responses:
        '200':
          description: Weight logged successfully
        '401':
          description: Unauthorized

  /api/log_exercise:
    post:
      summary: Log exercise
      description: Log an exercise entry for the authenticated user.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - date
                - activity
                - duration_minutes
              properties:
                date:
                  type: string
                  format: date
                  example: "2025-08-12"
                activity:
                  type: string
                  example: "Walking"
                duration_minutes:
                  type: integer
                  example: 45
                intensity:
                  type: string
                  enum: [Low, Moderate, High]
                  example: "Moderate"
                calories_burned:
                  type: number
                  example: 300
                steps:
                  type: integer
                  example: 7500
                distance_km:
                  type: number
                  example: 5.2
                notes:
                  type: string
                  example: "Morning walk in the park"
      responses:
        '200':
          description: Exercise logged successfully
        '401':
          description: Unauthorized

  /api/log_measurements:
    post:
      summary: Log body measurements
      description: Log body measurements for the authenticated user.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                date:
                  type: string
                  format: date
                  example: "2025-08-12"
                waist:
                  type: number
                  example: 80
                hips:
                  type: number
                  example: 95
                chest:
                  type: number
                  example: 100
                notes:
                  type: string
                  example: "Post-workout measurements"
      responses:
        '200':
          description: Measurements logged successfully
        '401':
          description: Unauthorized

  /api/user_goals:
    post:
      summary: Set or update a user goal
      description: >
        Stores a goal for the authenticated user. Target values are converted to kilograms
        server-side and stored in kg. Supports input in kg, lbs, or stones+pounds.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - goal_type
                - unit
              properties:
                goal_type:
                  type: string
                  example: "weight_loss"
                unit:
                  type: string
                  enum: [kg, lbs, st_lbs]
                  example: kg
                  description: Unit of the provided target value.
                target_value:
                  type: number
                  description: Required if unit is kg or lbs.
                  example: 75
                stones:
                  type: integer
                  description: Required if unit is st_lbs.
                  example: 12
                pounds:
                  type: number
                  description: Optional if unit is st_lbs.
                  example: 7
                target_date:
                  type: string
                  format: date
                  description: Optional target date in YYYY-MM-DD.
                  example: "2025-12-31"
      responses:
        '200':
          description: Goal saved
        '401':
          description: Unauthorized

  /api/update_user_settings:
    post:
      summary: Update user settings
      description: Update the authenticated user's settings.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                preferred_weight_unit:
                  type: string
                  enum: [kg, lb, st]
                  example: "kg"
      responses:
        '200':
          description: Settings updated successfully
        '401':
          description: Unauthorized

  /api/update_food_value:
    post:
      summary: Save a Syn value for a food item
      description: >
        Inserts a per-user Syn value entry into the canonical `syn_values` table. If `date` is
        omitted, today's date is used.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - food_name
                - syn_value
              properties:
                food_name:
                  type: string
                  example: "Weetabix Minis - Chocolate"
                syn_value:
                  type: number
                  example: 6
                is_healthy_extra_b:
                  type: boolean
                  description: Mark as Healthy Extra B when applicable.
                  example: false
                notes:
                  type: string
                  example: "Corrected from 4 to 6 Syns"
                date:
                  type: string
                  format: date
                  description: Optional log date in YYYY-MM-DD.
                  example: "2025-08-12"
      responses:
        '200':
          description: Syn value saved
        '401':
          description: Unauthorized

  /api/weight_graph:
    get:
      summary: Get weight history for chart display
      description: >
        Returns the authenticated user's weight log history, ordered by date ascending.
        Optional query parameters `start` and `end` can filter the results to a date range.
        All weights are stored in kg.
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: start
          schema:
            type: string
            format: date
          description: Optional start date (inclusive).
          example: "2025-01-01"
        - in: query
          name: end
          schema:
            type: string
            format: date
          description: Optional end date (inclusive).
          example: "2025-12-31"
      responses:
        '200':
          description: Successful retrieval of weight history
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    type: string
                    format: uuid
                    example: "f4b4f4d6-56a9-4b0b-9b38-8f0d57a6a9d0"
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        date:
                          type: string
                          format: date
                          example: "2025-08-12"
                        weight:
                          type: number
                          format: float
                          example: 82.5
        '401':
          description: Unauthorized

  /api/user_profile:
    get:
      summary: Get current user's profile
      description: Returns the authenticated user's ID.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful retrieval of user profile
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    type: string
                    format: uuid
                    example: "f4b4f4d6-56a9-4b0b-9b38-8f0d57a6a9d0"
        '401':
          description: Unauthorized

  /api/ping:
    get:
      summary: Ping API
      description: Returns pong without authentication.
      security: []
      responses:
        '200':
          description: Pong

  /spec/api-spec.yaml:
    get:
      summary: Download OpenAPI spec
      description: Returns the OpenAPI specification YAML file for the SlimBuddy API.
      security:
        - basicAuth: []
      responses:
        '200':
          description: OpenAPI spec retrieved successfully
